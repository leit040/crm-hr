<?php

namespace app\Model;

use Dotenv\Util\Str;
use Ramsey\Uuid\Uuid;
use Yii;

/**
 * This is the model class for table "employee".
 *
 * @property string $user_id
 * @property string $avatar_path
 * @property ?string $full_name
 * @property string $date_of_birth
 * @property string $start_of_work
 * @property string $position_at_company
 * @property string $education
 * @property string $city
 * @property string $contacts
 *
 * @property EmployeeFamily[] $employeeFamily
 * @property Skill[] $skill
 */
class Employee extends \App\Model\BaseModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'employee';
    }

    public $primaryKey = "user_id";

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'full_name', 'date_of_birth', 'start_of_work', 'position_at_company', 'education', 'city', 'contacts'], 'required'],
            [['contacts', 'education'], 'string'],
            [['user_id'], 'string', 'max' => 36],
            [['full_name', 'avatar_path'], 'string', 'max' => 512],
            [['position_at_company'], 'string', 'max' => 255],
            [['user_id'], 'unique'],
        ];
    }

    /**
     * {@inheritdoc}
     */

    public function fields(): array
    {
        return [
            'userId' => 'user_id',
            'avatarPath' => 'avatar_path',
            'fullName' => 'full_name',
            'dateOfBirth' => 'date_of_birth',
            'startOfWork' => 'start_of_work',
            'positionAtCompany' => 'position_at_company',
            'education',
            'contacts',
            'city',

        ];
    }

    public function extraFields()
    {
        return [
            'familyMembers' => function () {
                return $this->employeeFamily;
            },
            'skill' => function () {
                return $this->skill;
            }
        ];
    }


    public function getEmployeeFamily(): \yii\db\ActiveQuery
    {

        return $this->hasMany(EmployeeFamily::class, ['employee_id' => 'user_id']);

    }

    public function getSkill(): \yii\db\ActiveQuery
    {

        return $this->hasMany(Skill::class, ['id' => 'skill_id'])->viaTable('employee_skill', ['employee_id' => 'user_id']);
    }


    public static function create(string $userId, ?string $avatarPath, string $fullName, string $dateOfBirth, string $startOfWork, string $positionAtCompany,
                                  string $education, string $city, string $contacts): self
    {
        $model = new self();
        $model->user_id = $userId;
        $model->avatar_path = $avatarPath;
        $model->full_name = $fullName;
        $model->date_of_birth = $dateOfBirth;
        $model->start_of_work = $startOfWork;
        $model->position_at_company = $positionAtCompany;
        $model->education = $education;
        $model->city = $city;
        $model->contacts = $contacts;
        return $model;
    }

    public function updateData(?string $avatarPath, string $fullName, string $dateOfBirth, string $startOfWork, string $positionAtCompany,
                               string $education, string $city, string $contacts)
    {
        $this->avatar_path = $avatarPath;
        $this->full_name = $fullName;
        $this->date_of_birth = $dateOfBirth;
        $this->start_of_work = $startOfWork;
        $this->position_at_company = $positionAtCompany;
        $this->education = $education;
        $this->city = $city;
        $this->contacts = $contacts;
    }

    public function beforeDelete(): bool
    {

        $this->unlinkAll('skill',true);
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

}

